using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DBHesabdari_PG;
using DevExpress.XtraTab;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using DBHesabdari_PG.Models.EP.CodingHesabdari;
using HelpClassLibrary;
using System.Data.Entity;
using DBHesabdari_PG.Models.AK;

namespace AnbarVaKala.AmaliatRozaneh
{
    public partial class FrmMojodiAvalDoreKala : DevExpress.XtraEditors.XtraForm
    {
        MyContext dbContext;
        public FrmMojodiAvalDoreKala()
        {
            InitializeComponent();
            //// This line of code is generated by Data Source Configuration Wizard
            //// Instantiate a new DBContext
            //DBHesabdari_PG.MyContext dbContext = new DBHesabdari_PG.MyContext();
            //// Call the Load method to get the data for the given DbSet from the database.
            //dbContext.AkVorodeKala_Rizs.Load();
            //// This line of code is generated by Data Source Configuration Wizard
            //akVorodeKala_RizsBindingSource1.DataSource = dbContext.AkVorodeKala_Rizs.Local.ToBindingList();
        }

        public EnumCED En1 = EnumCED.Cancel;
        public EnumCED En2;

        XtraTabControl XtraTabControl1_1;
        GridControl gridControl;
        GridView gridView;
        //LookUpEdit cmbTabaghehKala;
        //LookUpEdit cmbGroupAsliKala;
        //LookUpEdit cmbGroupFareeKala;
        //LookUpEdit cmbVahedKala;
        //SimpleButton btnReloadTabaghehKala;
        //SimpleButton btnReloadGroupAsli;
        //SimpleButton btnReloadGroupFaree;
        //TextEdit txtCode;
        //TextEdit txtGroupCode;
        //CheckEdit chkEditCode;
        //SimpleButton btnNewCode;
        //TextEdit txtId;
        //TextEdit txtName;
        //TextEdit txtTarikhEjad;
        //CheckEdit chkIsActive;
        //TextEdit txtSharh;
        //PanelControl PanelControl1;
        //PanelControl PanelControl2;

        int _HesabMoinId = 0;
        int _HesabTafsili1Id = 0;
        int _HesabTafsili2Id = 0;
        int _HesabTafsili3Id = 0;
        string _SharhSanad = string.Empty;

        int _SalId = 0;
        public int _AzAnbarId = 0;
        public int _KalaId = 0;
        public int _VahedeKalaId = 0;
        public string _AzAnbarName_NM = string.Empty;
        public string _KalaCode_NM = string.Empty;
        public string _KalaName_NM = string.Empty;
        public string _VahedeKala_NM = string.Empty;
        public string _Meghdar = string.Empty;
        public string _Nerkh = string.Empty;
        public string _Mablag = string.Empty;
        public string _Tozihat = string.Empty;
        public int _RowHandle = 0;

        string NoeAmaliatTabpageName = string.Empty;
        string NoeSanadTabpageName = string.Empty;
        string NoeSanadText = string.Empty;
        int _IndexTabPage = 0;
        int _NoeAmaliatCode = 0;
        int _NoeSanadCode = 0;

        int _TabPageCount = 0;
        int EditRowIndex = 0;
        bool IsClosed_AmaliatAddVEit = true;

        public void FillGridControl()
        {
            using (var db = new MyContext())
            {
                try
                {
                    List<AkVorodeKala_Riz> q = new List<AkVorodeKala_Riz>();
                    if (_FirstSelectAnbar_NextSanad)
                    {
                        _AzAnbarId = Convert.ToInt32(cmbNameAnbar.EditValue);
                        var list = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.AzAnbarId == _AzAnbarId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode).OrderBy(s => s.SeryalJoze_darSelectAnbar).ToList();
                        q = list;
                    }
                    else
                    {
                        var list = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode).OrderBy(s => s.SeryalJoze_darSelectAnbar).ToList();
                        q = list;

                    }
                    //var q1 = db.EpAllHesabTafsilis.Where(s => s.SalId == _SalId).ToList();
                    //var q2 = db.EpNameKalas.Where(s => s.SalId == _SalId).ToList();
                    //var q3 = db.EpHesabMoin1s.Where(s => s.SalId == _SalId).ToList();

                    if (q.Count() > 0)
                    {
                        //foreach (var item in q.ToList())
                        //{
                        //    item.MoinCode_NM = q3.FirstOrDefault(s => s.Id == item.HesabMoinId).Code.ToString();
                        //    item.MoinName_NM = q3.FirstOrDefault(s => s.Id == item.HesabMoinId).Name;
                        //    item.TafsiliCode_NM = q1.FirstOrDefault(s => s.Id == item.HesabTafsili1Id).Code.ToString();
                        //    item.TafsiliName_NM = q1.FirstOrDefault(s => s.Id == item.HesabTafsili1Id).Name;
                        //    item.KalaCode_NM = q2.FirstOrDefault(s => s.Id == item.KalaId).Code.ToString();
                        //    item.KalaName_NM = q2.FirstOrDefault(s => s.Id == item.KalaId).Name;
                        //    item.VahedeKala_NM = q2.FirstOrDefault(s => s.Id == item.KalaId).VahedAsliName_NM;
                        //}

                        //dbContext.AkVorodeKala_Rizs.LoadAsync().ContinueWith(loadTask =>
                        //{
                        //    // Bind data to control when loading complete
                        //    gridControl.DataSource = dbContext.AkVorodeKala_Rizs.Local.ToBindingList();
                        //}, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

                        gridControl.DataSource = q.OrderBy(s => s.SeryalJoze_darSelectAnbar);
                    }
                    else
                        gridControl.DataSource = null;
                    btnDelete.Enabled = btnEdit.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled = false;

                }
                catch (Exception ex)
                {
                    XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.ToString(),
                        "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

        }

        public void FillCmbNameAnbar1()
        {
            using (var db = new MyContext())
            {
                try
                {
                    _SalId = Convert.ToInt32(lblSalId.Text);
                    var q1 = db.EpListAnbarhas.Where(s => s.SalId == _SalId && s.IsActive == true).OrderBy(s => s.Code).ToList();
                    //var q2 = db.EpTabaghehKalas.Where(s => s.SalId == _SalId).ToList();

                    //foreach (var item in q1)
                    //{
                    //    var qq = db.R_EpListAnbarha_B_EpTabaghehKalas.Where(s => s.SalId == _SalId && s.AnbarhId == item.Id).Select(s => s.TabagheKalaId).ToList();
                    //    if (qq.Count > 0)
                    //    {
                    //        string _KalaId = String.Empty;
                    //        foreach (var item2 in qq)
                    //        {
                    //            _KalaId += q2.FirstOrDefault(s => s.Id == item2).Name + ",";
                    //        }
                    //        item.TabagheKalaIdName_NM = _KalaId;
                    //    }
                    //}

                    if (q1.Count > 0)
                        epListAnbarhasBindingSource.DataSource = q1.ToList();
                    else
                        epListAnbarhasBindingSource.Clear();

                    //_SalId = Convert.ToInt32(lblSalId.Text);
                    //var q = db.EpListAnbarhas.Where(s => s.SalId == _SalId && s.IsActive == true).OrderBy(s => s.Code).ToList();
                    //cmbNameAnbar.Properties.DataSource = q.Count > 0 ? q : null;
                }
                catch (Exception ex)
                {
                    XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                        "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        //public void FillCmbNameAnbar2()
        //{
        //    using (var db = new MyContext())
        //    {
        //        try
        //        {
        //            _SalId = Convert.ToInt32(lblSalId.Text);
        //            var q1 = db.EpListAnbarhas.Where(s => s.SalId == _SalId).OrderBy(s => s.Code).ToList();
        //            var q2 = db.EpTabaghehKalas.Where(s => s.SalId == _SalId).ToList();

        //            foreach (var item in q1)
        //            {
        //                var qq = db.R_EpListAnbarha_B_EpTabaghehKalas.Where(s => s.SalId == _SalId && s.AnbarhId == item.Id).Select(s => s.TabagheKalaId).ToList();
        //                if (qq.Count > 0)
        //                {
        //                    string _KalaId = String.Empty;
        //                    foreach (var item2 in qq)
        //                    {
        //                        _KalaId += q2.FirstOrDefault(s => s.Id == item2).Name + ",";
        //                    }
        //                    item.TabagheKalaIdName_NM = _KalaId;
        //                }
        //            }

        //            if (q1.Count > 0)
        //                epListAnbarhasBindingSource1.DataSource = En1 == EnumCED.Edit ? q1.ToList() : q1.Where(s => s.IsActive == true).ToList();
        //            else
        //                epListAnbarhasBindingSource1.Clear();

        //            //_SalId = Convert.ToInt32(lblSalId.Text);
        //            //var q = db.EpListAnbarhas.Where(s => s.SalId == _SalId && s.IsActive == true).OrderBy(s => s.Code).ToList();
        //            //cmbNameAnbar.Properties.DataSource = q.Count > 0 ? q : null;
        //        }
        //        catch (Exception ex)
        //        {
        //            XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
        //                "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
        //        }
        //    }
        //}

        public void FillCmbHesabMoin()
        {
            using (var db = new MyContext())
            {
                try
                {
                    _SalId = Convert.ToInt32(lblSalId.Text);
                    var q = db.EpHesabMoin1s.Where(s => s.SalId == _SalId).OrderBy(s => s.Code).ToList();
                    if (En1 == EnumCED.Edit)
                        cmbHesabMoin.Properties.DataSource = q.Count > 0 ? q : null;
                    else
                        cmbHesabMoin.Properties.DataSource = q.Where(s => s.IsActive == true).ToList().Count > 0 ? q.Where(s => s.IsActive == true).ToList() : null;

                }
                catch (Exception ex)
                {
                    XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                        "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        public void FillCmbHesabTafsili()
        {
            using (var db = new MyContext())
            {
                try
                {
                    _SalId = Convert.ToInt32(lblSalId.Text);
                    _HesabMoinId = Convert.ToInt32(cmbHesabMoin.EditValue);

                    List<EpAllHesabTafsili> list = new List<EpAllHesabTafsili>();

                    var q1 = db.R_EpHesabMoin1_B_EpAllGroupTafsilis.Where(s => s.EpHesabMoin1Id == _HesabMoinId && s.SalId == _SalId).Select(s => s.AllGroupTafsiliId).ToList();
                    if (q1.Count > 0)
                    {
                        foreach (var item in q1)
                        {
                            var q = db.EpAllHesabTafsilis.Where(s => s.SalId == _SalId && s.GroupTafsiliId == item).OrderBy(s => s.Code).ToList();
                            list.AddRange(q);
                        }
                        #region MyRegion
                        ////db.EpAllHesabTafsilis.AddRange(list);
                        //List<EpAllHesabTafsili_HesabMovaghat> list1 = new List<EpAllHesabTafsili_HesabMovaghat>();
                        //foreach (var item in list)
                        //{
                        //    EpAllHesabTafsili_HesabMovaghat obj = new EpAllHesabTafsili_HesabMovaghat();
                        //    obj.Id = item.Id;
                        //    obj.SalId = item.SalId;
                        //    obj.LevelNamber = item.LevelNamber;
                        //    obj.Code = item.Code;
                        //    obj.Name = item.Name;
                        //    obj.GroupTafsiliId = item.GroupTafsiliId;
                        //    obj.MoinId = _HesabMoinId;
                        //    obj.IsActive = item.IsActive;
                        //    obj.IsDefault = item.IsDefault;
                        //    obj.SharhHesab = item.SharhHesab;
                        //    list1.Add(obj);
                        //}
                        //db.EpAllHesabTafsili_HesabMovaghats.AddRange(list1);

                        ////BindingSource bs = new BindingSource();
                        ////bs.DataSource = list;
                        ////BindingList<EpAllHesabTafsili> ok = new BindingList<EpAllHesabTafsili>(list);
                        //db.EpAllHesabTafsili_HesabMovaghats.Load(); 
                        #endregion
                        if (En1 == EnumCED.Create)
                        {
                            cmbHesabTafsili1.Properties.DataSource = list.Where(s => s.IsActive == true && s.LevelNamber == 1).Count() > 0 ? list.Where(s => s.IsActive == true && s.LevelNamber == 1).OrderBy(s => s.Code).ToList() : null;
                            cmbHesabTafsili2.Properties.DataSource = list.Where(s => s.IsActive == true && s.LevelNamber == 2).Count() > 0 ? list.Where(s => s.IsActive == true && s.LevelNamber == 2).OrderBy(s => s.Code).ToList() : null;
                            cmbHesabTafsili3.Properties.DataSource = list.Where(s => s.IsActive == true && s.LevelNamber == 3).Count() > 0 ? list.Where(s => s.IsActive == true && s.LevelNamber == 3).OrderBy(s => s.Code).ToList() : null;

                        }
                        else
                        {
                            cmbHesabTafsili1.Properties.DataSource = list.Where(s => s.LevelNamber == 1).OrderBy(s => s.Code);
                            cmbHesabTafsili2.Properties.DataSource = list.Where(s => s.LevelNamber == 2).OrderBy(s => s.Code);
                            cmbHesabTafsili3.Properties.DataSource = list.Where(s => s.LevelNamber == 3).OrderBy(s => s.Code);
                        }
                    }
                    else
                    {
                        cmbHesabTafsili1.Properties.DataSource = null;
                        cmbHesabTafsili2.Properties.DataSource = null;
                        cmbHesabTafsili3.Properties.DataSource = null;

                    }

                    //if (_HesabMoinId == 14)
                    //{
                    //    cmbHesabTafsili.Properties.DataSource = db.EpAllHesabTafsilis.Where(s => s.GroupTafsiliId == 1 || s.GroupTafsiliId == 2).ToList();
                    //}
                    //else if (_HesabMoinId == 15)
                    //{
                    //    cmbHesabTafsili.Properties.DataSource = db.EpAllHesabTafsilis.Where(s => s.GroupTafsiliId == 3 || s.GroupTafsiliId == 4).ToList();
                    //}

                }
                catch (Exception ex)
                {
                    XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                        "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        public void ActiveButtons()
        {
            //if (En1 == EnumCED.None)
            //{
            //    btnCreate.Enabled = btnDelete.Enabled = btnEdit.Enabled = btnSaveAndClosed.Enabled = btnSaveAndNext.Enabled =
            //        btnSaveAndPrintAndClosed.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled =
            //        btnDisplyList.Enabled = btnPrintPreview.Enabled = false;
            //    btnClose.Enabled = true;
            //}
            if (En1 == EnumCED.Create)
            {
                btnCreate.Enabled = btnDelete.Enabled = btnEdit.Enabled = btnSaveAndClosed.Enabled = btnSaveAndNext.Enabled =
                    btnSaveAndPrintAndClosed.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled =
                    btnDisplyList.Enabled = btnPrintPreview.Enabled = btnClose.Enabled = false;
                btnCancel.Enabled = true;
            }
            else if (En1 == EnumCED.Edit)
            {
                btnCreate.Enabled = btnDelete.Enabled = btnEdit.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled =
                    btnDisplyList.Enabled = btnPrintPreview.Enabled = btnClose.Enabled = false;
                btnCancel.Enabled = btnSaveAndClosed.Enabled = btnSaveAndPrintAndClosed.Enabled = btnSaveAndNext.Enabled = true;
            }
            else if (En1 == EnumCED.Save || En1 == EnumCED.Cancel)
            {
                btnDelete.Enabled = btnEdit.Enabled = btnSaveAndClosed.Enabled = btnSaveAndNext.Enabled =
                   btnSaveAndPrintAndClosed.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled = btnCancel.Enabled = false;
                if (IsClosed_AmaliatAddVEit)
                    btnClose.Enabled = btnCreate.Enabled = btnDisplyList.Enabled = btnPrintPreview.Enabled = true;
                else
                    btnCancel.Enabled = true;

            }
        }

        public bool IsValidation()
        {
            // string s = txtMeghdar.Text.Trim();
            if (Convert.ToInt32(cmbHesabMoin.EditValue) == 0)
            {
                XtraMessageBox.Show("لطفاً " + lblHesabMoin.Text + " را انتخاب کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                cmbHesabMoin.Focus();
                return false;
            }
            else if (Convert.ToInt32(cmbHesabTafsili1.EditValue) == 0 && cmbHesabTafsili1.ReadOnly == false)
            {
                XtraMessageBox.Show("لطفاً " + lblHesabTafsili1.Text + " را انتخاب کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                cmbHesabTafsili1.Focus();
                return false;
            }
            else if (Convert.ToInt32(cmbHesabTafsili2.EditValue) == 0 && cmbHesabTafsili2.ReadOnly == false)
            {
                XtraMessageBox.Show("لطفاً " + lblHesabTafsili2.Text + " را انتخاب کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                cmbHesabTafsili2.Focus();
                return false;
            }
            else if (Convert.ToInt32(cmbHesabTafsili3.EditValue) == 0 && cmbHesabTafsili3.ReadOnly == false)
            {
                XtraMessageBox.Show("لطفاً " + lblHesabTafsili3.Text + " را انتخاب کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                cmbHesabTafsili3.Focus();
                return false;
            }
            else if (string.IsNullOrEmpty(txtSeryal_darColAnbar.Text))
            {
                XtraMessageBox.Show("فیلد " + lblSeryal_darColAnbarha.Text + " خالی است ", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtSeryal_darColAnbar.Focus();
                return false;
            }
            else if (string.IsNullOrEmpty(txtSeryal_darSelectAnbar.Text))
            {
                if (_FirstSelectAnbar_NextSanad)
                {
                    XtraMessageBox.Show("فیلد " + lblSeryal_darSelectAnbar.Text + " خالی است ", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    txtSeryal_darSelectAnbar.Focus();
                    return false;

                }
            }
            else if (string.IsNullOrEmpty(txtSeryal_darSelectNoe.Text))
            {
                XtraMessageBox.Show("فیلد " + lblSeryal_darSelectNoe.Text + " خالی است ", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtSeryal_darSelectNoe.Focus();
                return false;
            }
            else if (string.IsNullOrEmpty(txtTarikh.Text))
            {
                XtraMessageBox.Show("لطفاً تاریخ را وارد کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtTarikh.Focus();
                return false;
            }
            else if (string.IsNullOrEmpty(txtNoeSanad1.Text) || string.IsNullOrEmpty(txtNoeSanad1.Text) || string.IsNullOrEmpty(txtNoeAmaliat1.Text))
            {
                XtraMessageBox.Show("نوع سند مشخص نیست", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //txtNoeSanad.Focus();
                return false;
            }
            else if (gridView_AmaliatAddVaEdit.RowCount == 0)
            {
                XtraMessageBox.Show("اطلاعاتی برای ذخیره وجود ندارد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                btnInsert.Focus();
                return false;
            }
            return true;
        }

        private void btnDelete1_Click(object sender, EventArgs e)
        {
            if (XtraMessageBox.Show("آیا ردیف انتخابی حذف گردد؟", "پیغام حذف", MessageBoxButtons.YesNo, MessageBoxIcon.Information) == DialogResult.Yes)
            {
                //gridView_AmaliatAddVaEdit.DeleteSelectedRows();
                gridView_AmaliatAddVaEdit.DeleteRow(gridView_AmaliatAddVaEdit.FocusedRowHandle);
            }
        }

        private void btnInsert_Click(object sender, EventArgs e)
        {
            En2 = EnumCED.Create;
            FrmAmaliatSelectKala fm = new FrmAmaliatSelectKala(this);
            //fm.MdiParent = this;
            fm.lblUserId.Text = lblUserId.Text;
            fm.lblUserName.Text = lblUserName.Text;
            fm.lblSalId.Text = lblSalId.Text;
            fm.lblSalMali.Text = lblSalMali.Text;
            //fm.En3 = EnumCED.Create ;
            if (_FirstSelectAnbar_NextSanad)
                fm.AzAnbarId = Convert.ToInt32(cmbNameAnbar.EditValue);
            fm.ShowDialog();

            //gridView_AmaliatAddVaEdit.AddNewRow();
            //gridView_AmaliatAddVaEdit.FocusInvalidRow();
            //gridView_AmaliatAddVaEdit.SetRowCellValue(0, "M", 10);
            //add a new row
            //gridView_AmaliatAddVaEdit.AddNewRow();
            //set a new row cell value. The static GridControl.NewItemRowHandle field allows you to retrieve the added row
            //gridView_AmaliatAddVaEdit.SetRowCellValue(GridControl.NewItemRowHandle, gridView_AmaliatAddVaEdit.Columns["Meghdar"], 11);

            //gridView_AmaliatAddVaEdit_InitNewRow(null, null);
            //gridView_AmaliatAddVaEdit.AddNewRow();
            //if (gridView_AmaliatAddVaEdit.RowCount > 0)
            //    _Index = gridView_AmaliatAddVaEdit.RowCount;
            //else
            //    _Index = 0;
            //gridView_AmaliatAddVaEdit.SetRowCellValue(_Index, "Meghdar", "105");
            //gridView_AmaliatAddVaEdit.SetRowCellValue(_Index, "Nerkh", "106");
            //gridView_AmaliatAddVaEdit.SetRowCellValue(_Index, "Mablag", "107");


            //BindingList<AkVorodeKala_Riz> List1 = new BindingList<AkVorodeKala_Riz>();
            //List1[0].Mablag = 11;
            //(gridControl_AmaliatAddVaEdit.DataSource as BindingList<List1>).AddNew();


            //List<AkVorodeKala_Riz> list = new List<AkVorodeKala_Riz>()
            //          {
            //              new AkVorodeKala_Riz { Meghdar = 11, },
            //              new AkVorodeKala_Riz { Meghdar = 12, },
            //          };
            //BindingList<AkVorodeKala_Riz> bindingList = new BindingList<AkVorodeKala_Riz>(list);
            //BindingSource source = new BindingSource(bindingList, null);
            //gridControl_AmaliatAddVaEdit.DataSource = source;

            //List<AkVorodeKala_Riz> list = new List<AkVorodeKala_Riz>()
            //{
            //    new AkVorodeKala_Riz(){Meghdar = 13,Nerkh = 14,Mablag = 15,}
            //};
            //BindingList<AkVorodeKala_Riz> bindingList = new BindingList<AkVorodeKala_Riz>(list);
            //BindingSource source = new BindingSource(bindingList, null);
            //gridControl_AmaliatAddVaEdit.DataSource = source;

        }

        private void gridView_InitNewRow(object sender, InitNewRowEventArgs e)
        {
            GridView view = sender as GridView;
            view.SetRowCellValue(e.RowHandle, "AzAnbarId", _AzAnbarId);
            view.SetRowCellValue(e.RowHandle, "KalaId", _KalaId);
            view.SetRowCellValue(e.RowHandle, "VahedeKalaId", _VahedeKalaId);
            view.SetRowCellValue(e.RowHandle, "KalaCode_NM", _KalaCode_NM);
            view.SetRowCellValue(e.RowHandle, "KalaName_NM", _KalaName_NM);
            view.SetRowCellValue(e.RowHandle, "VahedeKala_NM", _VahedeKala_NM);
            view.SetRowCellValue(e.RowHandle, "AzAnbarName_NM", _AzAnbarName_NM);
            view.SetRowCellValue(e.RowHandle, "Meghdar", _Meghdar);
            view.SetRowCellValue(e.RowHandle, "Nerkh", _Nerkh);
            view.SetRowCellValue(e.RowHandle, "Mablag", _Mablag);
            view.SetRowCellValue(e.RowHandle, "Tozihat", _Tozihat);

            // gridView_AmaliatAddVaEdit.AddNewRow();
        }

        private void gridView_CustomDrawRowIndicator(object sender, RowIndicatorCustomDrawEventArgs e)
        {
            GridView view = sender as GridView;
            HelpClass1.CustomDrawRowIndicator(sender, e, view);
            //HelpClass1.MoveFirst(gridView_AmaliatAddVaEdit);
            //gridView_AmaliatAddVaEdit.FocusInvalidRow();
            //HelpClass1.MoveLast(gridView_AmaliatAddVaEdit);

        }

        private void btnCreate_Click(object sender, EventArgs e)
        {
            if (btnCreate.Enabled)
            {
                using (var db = new MyContext())
                {
                    try
                    {
                        _SalId = Convert.ToInt32(lblSalId.Text);
                        var qp = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode).ToList();
                        txtSeryal_darColAnbar.Text = qp.Count > 0 ? (qp.Max(s => s.SeryalCol_darColAnbarha) + 1).ToString() : "1";

                        if (_FirstSelectAnbar_NextSanad)
                        {
                            _AzAnbarId = Convert.ToInt32(cmbNameAnbar.EditValue);
                            if (_AzAnbarId == 0)
                            {
                                XtraMessageBox.Show("لطفاً انبار مورد نظر را انتخاب کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                cmbNameAnbar.ShowPopup();
                                return;
                            }

                            panelControl_NameAnbar.Enabled = false;


                            var q = qp.Where(s => s.AzAnbarId == _AzAnbarId).ToList();
                            txtSeryal_darSelectAnbar.Text = q.Count > 0 ? (q.Max(s => s.SeryalCol_darSelectAnbar) + 1).ToString() : "1";

                            var qq = q.Where(s => s.NoeSanadCode == _NoeSanadCode).ToList();
                            txtSeryal_darSelectNoe.Text = qq.Count > 0 ? (qq.Max(s => s.SeryalJoze_darSelectAnbar) + 1).ToString() : "1";

                            //var q = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.AzAnbarId == _AzAnbarId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode).ToList();
                            //if (q.Count > 0)
                            //{
                            //    txtSeryal_darSelectNoe.Text = (q.Max(s => s.Seryal_darSelectNoe) + 1).ToString();
                            //}
                            //else
                            //    txtSeryal_darSelectNoe.Text = "1";
                        }
                        else
                        {
                            var q = qp.Where(s => s.NoeSanadCode == _NoeSanadCode).ToList();
                            txtSeryal_darSelectNoe.Text = q.Count > 0 ? (q.Max(s => s.SeryalJoze_darSelectAnbar) + 1).ToString() : "1";
                            txtSeryal_darSelectAnbar.Text = "0";
                            txtSeryal_darSelectAnbar.Visible = lblSeryal_darSelectAnbar.Visible = false;

                            //var q = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode).ToList();
                            //if (q.Count > 0)
                            //{
                            //    txtSeryal_darSelectNoe.Text = (q.Max(s => s.Seryal_darSelectNoe) + 1).ToString();
                            //}
                            //else
                            //    txtSeryal_darSelectNoe.Text = "1";
                        }

                        En1 = EnumCED.Create;
                        ActiveButtons();
                        string NoeSanad = "عملیات ایجاد";
                        //_IndexTabPage = XtraTabControl1_1.SelectedTabPageIndex;
                        //NoeSanadTabpageName = XtraTabControl1_1.SelectedTabPage.Name;
                        //txtNoeSanad1.Text = XtraTabControl1_1.SelectedTabPage.Text;
                        //txtNoeSanad.BackColor = Color.LightGreen;
                        //lblSanadNamber.BackColor = Color.LightGreen;
                        XtraTabControl1_1 = xtcAmaliatRozaneh;
                        txtNoeAmaliat1.Text = xtcAmaliatRozaneh.SelectedTabPage.Name;
                        txtNoeSanad1.Text = XtraTabControl1_1.SelectedTabPage.Name;
                        xtpAmaliatAddVEdit.PageVisible = true;
                        xtpAmaliatAddVEdit.Appearance.Header.BackColor = Color.LightGreen;
                        //xtpAmaliatAddVEdit.Text = "عملیات ایجاد";
                        HelpClass1.DateTimeMask(txtTarikh);
                        txtTarikh.Text = DateTime.Now.ToString();
                        //chkIsSanadHesabdari.Checked = true;

                        NoeSanad = NoeSanad + " : نوع رسید " + ": " + XtraTabControl1_1.SelectedTabPage.Text;
                        xtpAmaliatAddVEdit.Text = NoeSanad;
                        xtcAmaliatRozaneh.SelectedTabPageIndex = 1;
                        lblSeryal_darColAnbarha.Text = "ش رسید در کل انبارها";
                        lblSeryal_darSelectAnbar.Text = "ش رسید در انبار انتخابی";
                        lblSeryal_darSelectNoe.Text = "ش رسید در نوع رسید";

                        dbContext = new MyContext();
                        //dbContext.AkVorodeKala_Rizs.Where(s => s.Id == 0).LoadAsync().ContinueWith(loadTask =>
                        //{
                        //    // Bind data to control when loading complete
                        //    akVorodeKala_RizsBindingSource.DataSource = dbContext.AkVorodeKala_Rizs.Local.ToBindingList();
                        //}, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
                        dbContext.AkVorodeKala_Rizs.Where(s => s.Id == 0).Load();
                        // Bind data to control when loading complete
                        akVorodeKala_RizsBindingSource.DataSource = dbContext.AkVorodeKala_Rizs.Local.ToBindingList();
                        xtpMojodiAvalDore.PageEnabled = false;
                        //for (int i = 0; i < xtcAmaliatRozaneh.TabPages.Count; i++)
                        //{
                        //    if (xtcAmaliatRozaneh.TabPages[i].Name != "xtpAmaliatAddVEdit")
                        //    {
                        //        xtcAmaliatRozaneh.TabPages[i].PageEnabled = false;
                        //    }
                        //}
                        //for (int i = 0; i < XtraTabControl1_1.TabPages.Count; i++)
                        //{
                        //    if (XtraTabControl1_1.TabPages[i].Name != NoeSanadTabpageName)
                        //    {
                        //        XtraTabControl1_1.TabPages[i].PageEnabled = false;
                        //    }
                        //}
                        // xtpAmaliatAddVEdit.PageEnabled = true;
                        FillCmbHesabMoin();
                        txtTarikh.Focus();
                    }
                    catch (Exception ex)
                    {
                        XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                            "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }

            }
        }
        public bool _FirstSelectAnbar_NextSanad = false;

        private void FrmMojodiAvalDoreKala_Load(object sender, EventArgs e)
        {
            _SalId = Convert.ToInt32(lblSalId.Text);
            //En1 = EnumCED.None;
            //ActiveButtons();
            //NoeAmaliatTabpageIndex = 0;
            //NoeAmaliatTabpageName = xtcAmaliatRozaneh.SelectedTabPage.Name;
            //_NoeAmaliatCode = 2;
            //_NoeSanadCode = 201;
            //// xtcAmaliatRozaneh.SelectedTabPageIndex = 0;
            //NoeSanadTabpageIndex = 0;
            //XtraTabControl1_1 = xtc_VorodeKala;
            //NoeSanadTabpageName = XtraTabControl1_1.SelectedTabPage.Name;
            //NoeSanadText = XtraTabControl1_1.SelectedTabPage.Text;
            xtcAmaliatRozaneh_SelectedPageChanged(null, null);
            gridControl = gridControl_MojodiAvalDore;
            gridView = gridView_MojodiAvalDore;
            // XtraTabControl1_1.SelectedTabPageIndex = 0;

            if (_FirstSelectAnbar_NextSanad)
            {
                FillCmbNameAnbar1();
                btnDisplyList.Enabled = false;
                textEdit1.Focus();
            }
            else
            {
                panelControl_NameAnbar.Enabled = false;
                panelControl_NameAnbar.Visible = false;
                panelControl_NameAnbar.Width = 0;
                xtcAmaliatRozaneh.Enabled = true;
                btnDisplyList_Click(null, null);
                btnCreate.Focus();
            }

        }

        int NoeAmaliatTabpageIndex = 0;
        private void xtcAmaliatRozaneh_SelectedPageChanged(object sender, DevExpress.XtraTab.TabPageChangedEventArgs e)
        {
            if (En1 == EnumCED.Cancel)
            {
                NoeAmaliatTabpageIndex = 0;
                NoeAmaliatTabpageName = xtcAmaliatRozaneh.SelectedTabPage.Name;
                XtraTabControl1_1 = xtcAmaliatRozaneh;
                //NoeSanadTabpageName = XtraTabControl1_1.SelectedTabPage.Name;
                //NoeSanadText = XtraTabControl1_1.SelectedTabPage.Text;
                //NoeSanadName = XtraTabControl1_1.SelectedTabPage.Text;
                _NoeAmaliatCode = 1;

                //NoeSanadTabpageIndex = 3;
                //NoeSanadTabpageName = xtcAmaliatRozaneh.SelectedTabPage.Name;
                NoeSanadText = xtcAmaliatRozaneh.SelectedTabPage.Text;
                gridControl = gridControl_MojodiAvalDore;
                gridView = gridView_MojodiAvalDore;
                _NoeSanadCode = 100;
                btnCreate.Enabled = true;

                btnDelete.Enabled = btnEdit.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled = btnPrintPreview.Enabled = false;

            }
        }
        private void btnReloadNameAnbar_Click(object sender, EventArgs e)
        {
            FillCmbNameAnbar1();
        }

        private void btnReloadHesabMoin_Click(object sender, EventArgs e)
        {
            FillCmbHesabMoin();
        }

        private void btnReloadHesabTafsili_Click(object sender, EventArgs e)
        {
            FillCmbHesabTafsili();
        }

        private void cmbHesabMoin_EditValueChanged(object sender, EventArgs e)
        {
            //if (Convert.ToInt32(cmbHesabMoin.EditValue) > 0)
            //    FillCmbHesabTafsili();
            //cmbHesabTafsili.EditValue = 0;
            using (var db = new MyContext())
            {
                try
                {
                    FillCmbHesabTafsili();
                    _SalId = Convert.ToInt32(lblSalId.Text);
                    int _HesabMoinId = Convert.ToInt32(cmbHesabMoin.EditValue);
                    var q = db.EpHesabMoin1s.FirstOrDefault(s => s.SalId == _SalId && s.Id == _HesabMoinId);
                    if (q != null)
                    {
                        switch (q.GroupTafsiliLevelsIndex)
                        {
                            case 0:
                                {
                                    cmbHesabTafsili1.ReadOnly = cmbHesabTafsili2.ReadOnly = cmbHesabTafsili3.ReadOnly = true;
                                    break;
                                }
                            case 1:
                                {
                                    cmbHesabTafsili1.ReadOnly = false;
                                    cmbHesabTafsili2.ReadOnly = cmbHesabTafsili3.ReadOnly = true;
                                    break;
                                }
                            case 2:
                                {
                                    cmbHesabTafsili1.ReadOnly = cmbHesabTafsili2.ReadOnly = false;
                                    cmbHesabTafsili3.ReadOnly = true;
                                    break;
                                }
                            case 3:
                                {
                                    cmbHesabTafsili1.ReadOnly = cmbHesabTafsili2.ReadOnly = cmbHesabTafsili3.ReadOnly = false;
                                    break;
                                }
                            default:
                                break;
                        }

                    }
                }
                catch (Exception ex)
                {
                    XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                        "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            FillGridControl();

            xtpMojodiAvalDore.PageEnabled = true;

            HelpClass1.ClearControls(panelControl_AddVaEdit);
            cmbHesabTafsili1.EditValue = cmbHesabTafsili2.EditValue = cmbHesabTafsili3.EditValue = null;
            cmbHesabMoin.Properties.DataSource = cmbHesabTafsili1.Properties.DataSource = cmbHesabTafsili2.Properties.DataSource = cmbHesabTafsili3.Properties.DataSource = null;
            btnDelete1.Enabled = btnEdit1.Enabled = false;

            En1 = EnumCED.Cancel;
            xtcAmaliatRozaneh.SelectedTabPageIndex = NoeAmaliatTabpageIndex;
            //XtraTabControl1_1.SelectedTabPageIndex = NoeSanadTabpageIndex;
            // if (NoeAmaliatTabpageIndex == 0 && NoeSanadTabpageIndex == 0)
            // XtraTabControl1_1_SelectedPageChanged(null, null);

            xtpAmaliatAddVEdit.PageVisible = false;
            panelControl_NameAnbar.Enabled = true;

            akVorodeKala_RizsBindingSource.Clear();
            //akVorodeKala_RizsBindingSource.DataSource = null;

            ActiveButtons();

        }

        private void btnClose_Click(object sender, EventArgs e)
        {
            if (btnClose.Enabled)
            {
                //dbContext.Dispose();
                //panelControl_NameAnbar.Enabled = true;
                this.Close();

            }
        }


        private void btnEdit1_Click(object sender, EventArgs e)
        {
            if (gridView_AmaliatAddVaEdit.RowCount > 0)
            {
                En2 = EnumCED.Edit;
                _AzAnbarId = (int)gridView_AmaliatAddVaEdit.GetFocusedRowCellValue("AzAnbarId");
                _KalaId = (int)gridView_AmaliatAddVaEdit.GetFocusedRowCellValue("KalaId");
                _VahedeKalaId = (int)gridView_AmaliatAddVaEdit.GetFocusedRowCellValue("VahedeKalaId");
                //_KalaCode_NM = gridView_AmaliatAddVaEdit.GetFocusedRowCellDisplayText("KalaCode");
                //_KalaName_NM = gridView_AmaliatAddVaEdit.GetFocusedRowCellDisplayText("KalaName");
                _Meghdar = gridView_AmaliatAddVaEdit.GetFocusedRowCellDisplayText("Meghdar");
                _Nerkh = gridView_AmaliatAddVaEdit.GetFocusedRowCellDisplayText("Nerkh");
                _Mablag = gridView_AmaliatAddVaEdit.GetFocusedRowCellDisplayText("Mablag");
                _Tozihat = gridView_AmaliatAddVaEdit.GetFocusedRowCellDisplayText("Tozihat");
                _RowHandle = gridView_AmaliatAddVaEdit.FocusedRowHandle;

                FrmAmaliatSelectKala fm = new FrmAmaliatSelectKala(this);
                //fm.MdiParent = this;
                fm.lblUserId.Text = lblUserId.Text;
                fm.lblUserName.Text = lblUserName.Text;
                fm.lblSalId.Text = lblSalId.Text;
                fm.lblSalMali.Text = lblSalMali.Text;
                //fm.En3 = EnumCED.Create;
                //fm.AzAnbarId = Convert.ToInt32(cmbNameAnbar2.EditValue);
                fm.ShowDialog();

            }
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            if (btnDelete.Enabled)
            {
                if (gridView.RowCount > 0)
                {
                    int _Seryal_darColAnbarha = 0;
                    int _Seryal_darSelectAnbar = 0;
                    int _Seryal_darSelectNoe = 0;
                    try
                    {
                        _Seryal_darColAnbarha = Convert.ToInt32(gridView.GetFocusedRowCellValue("Seryal_darColAnbarha").ToString());
                        _Seryal_darSelectAnbar = Convert.ToInt32(gridView.GetFocusedRowCellValue("Seryal_darSelectAnbar").ToString());
                        _Seryal_darSelectNoe = Convert.ToInt32(gridView.GetFocusedRowCellValue("Seryal_darSelectNoe").ToString());

                    }
                    catch (Exception)
                    {
                        XtraMessageBox.Show("لطفاً روی زیر گروه مربوطه کلیک کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }
                    //string NoeSanad = XtraTabControl1_1.SelectedTabPage.Text;
                    if (XtraMessageBox.Show("آیا " + NoeSanadText + " مورد نظر کلاً حذف گردد؟", "پیغام حذف", MessageBoxButtons.YesNo, MessageBoxIcon.Information) == DialogResult.Yes)
                    {
                        EditRowIndex = gridView.FocusedRowHandle;
                        using (var db = new MyContext())
                        {
                            try
                            {
                                _SalId = Convert.ToInt32(lblSalId.Text);
                                _AzAnbarId = Convert.ToInt32(cmbNameAnbar.EditValue);
                                var q = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode && s.SeryalCol_darColAnbarha == _Seryal_darColAnbarha).ToList();
                                if (q.Count > 0)
                                {
                                    if (_FirstSelectAnbar_NextSanad)
                                    {
                                        var q1 = q.Where(s => s.SeryalCol_darSelectAnbar == _Seryal_darSelectAnbar && s.SeryalJoze_darSelectAnbar == _Seryal_darSelectNoe && s.AzAnbarId == _AzAnbarId).ToList();
                                        db.AkVorodeKala_Rizs.RemoveRange(q1);
                                    }
                                    else
                                        db.AkVorodeKala_Rizs.RemoveRange(q);
                                    /////////////////////////////////////////////////////////////////////////////
                                    db.SaveChanges();

                                    btnDisplyList_Click(null, null);
                                    // XtraMessageBox.Show("عملیات حذف با موفقیت انجام شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information); ;
                                    if (gridView.RowCount > 0)
                                        gridView.FocusedRowHandle = EditRowIndex - 1;
                                }
                                else
                                    XtraMessageBox.Show("رکورد جاری در بانک اطلاعاتی موجود نیست", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            }
                            //catch (DbUpdateException)
                            //{
                            //    if (_SelectedTabPage != "xtraTabPage_NameKala")
                            //    {
                            //        XtraMessageBox.Show("حذف این حساب مقدور نیست \n" +
                            //    " جهت حذف حساب بایستی در ابتدا زیرمجموعه های این حساب حذف شود", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    }
                            //    else
                            //        XtraMessageBox.Show("حذف این حساب مقدور نیست \n" + " زیرا با حساب فوق سند صادر گردیده است", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //}
                            catch (Exception ex)
                            {
                                XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message, "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            }
                        }
                    }
                }
            }

        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            if (btnEdit.Enabled)
            {
                if (gridView.RowCount > 0)
                {

                    try
                    {
                        int _Seryal = Convert.ToInt32(gridView.GetFocusedRowCellValue("Seryal_darColAnbarha").ToString());

                    }
                    catch (Exception)
                    {
                        XtraMessageBox.Show("لطفاً روی زیر گروه مربوطه کلیک کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }

                    try
                    {
                        if (_FirstSelectAnbar_NextSanad)
                        {
                            _AzAnbarId = Convert.ToInt32(gridView.GetFocusedRowCellValue("AzAnbarId"));
                            panelControl_NameAnbar.Enabled = false;
                        }
                        else
                        {
                            txtSeryal_darSelectAnbar.Text = "0";
                            txtSeryal_darSelectAnbar.Visible = lblSeryal_darSelectAnbar.Visible = false;
                        }
                        dbContext = new MyContext();
                        En1 = EnumCED.Edit;
                        _SalId = Convert.ToInt32(lblSalId.Text);
                        string NoeSanad = "عملیات ویرایش";
                        int _Seryal_darColAnbarha = Convert.ToInt32(gridView.GetFocusedRowCellValue("Seryal_darColAnbarha").ToString());
                        int _Seryal_darSelectAnbar = Convert.ToInt32(gridView.GetFocusedRowCellValue("Seryal_darSelectAnbar").ToString());
                        int _Seryal_darSelectNoe = Convert.ToInt32(gridView.GetFocusedRowCellValue("Seryal_darSelectNoe").ToString());
                        int? _GhateySanadNamber = null;
                        if (gridView.GetFocusedRowCellValue("GhateySanadNamber") != null)
                            _GhateySanadNamber = Convert.ToInt32(gridView.GetFocusedRowCellValue("GhateySanadNamber").ToString());
                        int _SabetAtefNumber = Convert.ToInt32(gridView.GetFocusedRowCellValue("SabetAtefNumber").ToString());
                        int _RozaneSanadNumber = Convert.ToInt32(gridView.GetFocusedRowCellValue("RozaneSanadNumber").ToString());
                        int? _PaygiriNumber = null;
                        if (gridView.GetFocusedRowCellValue("PaygiriNumber") != null)
                            _PaygiriNumber = Convert.ToInt32(gridView.GetFocusedRowCellValue("PaygiriNumber").ToString());
                        string _DateTimeSanad = Convert.ToDateTime(gridView.GetFocusedRowCellValue("DateTimeSanad")).ToString();
                        bool _IsRiali = Convert.ToBoolean(gridView.GetFocusedRowCellValue("IsRiali"));
                        int _MoinId = Convert.ToInt32(gridView.GetFocusedRowCellValue("HesabMoinId"));
                        // string _TafsiliId = gridView.GetFocusedRowCellValue("TafsiliName").ToString();
                        _SharhSanad = gridView.GetFocusedRowCellValue("SharhSanad") != null ? gridView.GetFocusedRowCellValue("SharhSanad").ToString() : null;
                        int _Tafsili1Id = Convert.ToInt32(gridView.GetFocusedRowCellValue("HesabTafsili1Id"));
                        int _Tafsili2Id = Convert.ToInt32(gridView.GetFocusedRowCellValue("HesabTafsili2Id"));
                        int _Tafsili3Id = Convert.ToInt32(gridView.GetFocusedRowCellValue("HesabTafsili3Id"));
                        ActiveButtons();

                        //for (int i = 0; i < xtcAmaliatRozaneh.TabPages.Count; i++)
                        //{
                        //    if (xtcAmaliatRozaneh.TabPages[i].Name != "xtpAmaliatAddVEdit")
                        //    {
                        //        xtcAmaliatRozaneh.TabPages[i].PageEnabled = false;
                        //    }
                        //}

                        //var q1 = db.EpHesabTafsiliAshkhass.Where(s => s.SalId == _SalId).ToList();
                        var q2 = dbContext.EpNameKalas.Where(s => s.SalId == _SalId).ToList();
                        var q3 = dbContext.EpAllHesabTafsilis.Where(s => s.SalId == _SalId).ToList();
                        var q = dbContext.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode && s.SeryalCol_darColAnbarha == _Seryal_darColAnbarha).ToList();
                        if (q.Count > 0)
                        {
                            txtSeryal_darColAnbar.Text = _Seryal_darColAnbarha.ToString();
                            txtSeryal_darSelectAnbar.Text = _Seryal_darSelectAnbar.ToString();
                            txtSeryal_darSelectNoe.Text = _Seryal_darSelectNoe.ToString();
                            txtGhateySanadNumber.Text = _GhateySanadNamber != null ? _GhateySanadNamber.ToString() : "";
                            txtSabetAtefNumber.Text = _SabetAtefNumber.ToString();
                            txtRozaneSanadNumber.Text = _RozaneSanadNumber.ToString();
                            txtPaygiriNumber.Text = _PaygiriNumber != null ? _PaygiriNumber.ToString() : "";
                            txtNoeAmaliat1.Text = xtcAmaliatRozaneh.SelectedTabPage.Name;
                            txtNoeSanad1.Text = XtraTabControl1_1.SelectedTabPage.Name;
                            //txtNoeSanad1.Text = XtraTabControl1_1.SelectedTabPage.Text;
                            //txtNoeSanad.BackColor = Color.Yellow;
                            HelpClass1.DateTimeMask(txtTarikh);
                            txtTarikh.Text = _DateTimeSanad;
                            //chkIsSanadHesabdari.Checked = _IsRiali;
                            //txtRozaneSanadNumber.Text = _RozaneSanadNumber;
                            txtSharhSanad.Text = _SharhSanad;
                            //lblSanadNamber.BackColor = Color.Yellow;
                            // _TabPageCount = XtraTabControl1_1.TabPages.Count;
                            xtpMojodiAvalDore.PageEnabled = false;
                            xtcAmaliatRozaneh.SelectedTabPageIndex = 1;
                            xtpAmaliatAddVEdit.PageVisible = true;
                            NoeSanad = NoeSanad + " : نوع رسید " + ": " + XtraTabControl1_1.SelectedTabPage.Text;
                            xtpAmaliatAddVEdit.Text = NoeSanad;
                            xtpAmaliatAddVEdit.Appearance.Header.BackColor = Color.Pink;
                            lblSeryal_darColAnbarha.Text = "ش رسید در کل انبارها";
                            lblSeryal_darSelectAnbar.Text = "ش رسید در انبار انتخابی";
                            lblSeryal_darSelectNoe.Text = "ش رسید در نوع رسید";
                            FillCmbHesabMoin();
                            cmbHesabMoin.EditValue = _MoinId;
                            cmbHesabTafsili1.EditValue = _Tafsili1Id;
                            cmbHesabTafsili2.EditValue = _Tafsili2Id;
                            cmbHesabTafsili3.EditValue = _Tafsili3Id;
                            //cmbHesabTafsili1.Text = q3.Find(s => s.Id == _Tafsili1Id).Name.ToString();
                            //cmbHesabTafsili2.Text = q3.Find(s => s.Id == _Tafsili2Id).Name.ToString();
                            //cmbHesabTafsili3.Text = q3.Find(s => s.Id == _Tafsili3Id).Name.ToString();
                            //cmbHesabTafsili1.ShowPopup();
                            //cmbHesabTafsili1.ClosePopup();
                            //cmbHesabTafsili2.ShowPopup();
                            //cmbHesabTafsili2.ClosePopup();
                            //cmbHesabTafsili3.ShowPopup();
                            //cmbHesabTafsili3.ClosePopup();

                            //List<AkVorodeKala_Riz> DBGridControl = (List<AkVorodeKala_Riz>)gridControl.DataSource;
                            //BindingList<AkVorodeKala_Riz> bl = new BindingList<AkVorodeKala_Riz>(DBGridControl);
                            //akVorodeKala_RizsBindingSource.DataSource = bl.Where(s => s.Seryal == _Seryal);

                            foreach (var item in q)
                            {
                                item.KalaCode_NM = q2.FirstOrDefault(s => s.Id == item.KalaId).Code.ToString();
                                item.KalaName_NM = q2.FirstOrDefault(s => s.Id == item.KalaId).Name;
                                item.VahedeKala_NM = q2.FirstOrDefault(s => s.Id == item.KalaId).EpVahedAsliKala.Name;
                                item.AzAnbarName_NM = new MyContext().EpListAnbarhas.FirstOrDefault(s => s.Id == item.AzAnbarId).Name;
                            }

                            //dbContext.AkVorodeKala_Rizs.LoadAsync().ContinueWith(loadTask =>
                            //{
                            //    // Bind data to control when loading complete
                            //    gridControl.DataSource = dbContext.AkVorodeKala_Rizs.Local.ToBindingList();
                            //}, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

                            //xtp_AddVaEdit.PageVisible = true;

                            //dbContext.AkVorodeKala_Rizs.Where(s => s.Id == 0).Load();
                            // Bind data to control when loading complete
                            if (!_FirstSelectAnbar_NextSanad)
                            {
                                //akVorodeKala_RizsBindingSource.DataSource = dbContext.AkVorodeKala_Rizs.Local.ToBindingList();
                                akVorodeKala_RizsBindingSource.DataSource = q.Count > 0 ? q.ToList() : null;
                            }
                            else
                            {
                                //var q4 = dbContext.AkVorodeKala_Rizs.Where(s => s.AzAnbarId == _AzAnbarId).ToList();
                                //akVorodeKala_RizsBindingSource.DataSource = dbContext.AkVorodeKala_Rizs.Local.ToBindingList();
                                var q4 = q.Where(s => s.AzAnbarId == _AzAnbarId).ToList();
                                akVorodeKala_RizsBindingSource.DataSource = q4.Count > 0 ? q4.ToList() : null;
                            }
                        }


                        //for (int i = 0; i < XtraTabControl1_1.TabPages.Count; i++)
                        //{
                        //    if (XtraTabControl1_1.TabPages[i].Name != NoeSanadTabpageName)
                        //    {
                        //        XtraTabControl1_1.TabPages[i].PageEnabled = false;
                        //    }
                        //}
                        txtTarikh.Focus();


                    }
                    catch (Exception ex)
                    {
                        XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                            "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }

                }
            }

        }

        private void cmbNameAnbar_Enter(object sender, EventArgs e)
        {
            cmbNameAnbar.ShowPopup();
        }

        private void cmbHesabMoin_Enter(object sender, EventArgs e)
        {
            if (En1 == EnumCED.Create || En1 == EnumCED.Save)
            {
                cmbHesabMoin.ShowPopup();
            }

        }

        private void cmbHesabTafsili_Enter(object sender, EventArgs e)
        {
            if (En1 == EnumCED.Create || En1 == EnumCED.Save)
            {
                cmbHesabTafsili1.ShowPopup();
            }

        }

        private void btnSaveAndClosed_Click(object sender, EventArgs e)
        {
            if (btnSaveAndClosed.Enabled)
            {
                using (var db = new MyContext())
                {
                    try
                    {
                        _SalId = Convert.ToInt32(lblSalId.Text);
                        if (_FirstSelectAnbar_NextSanad)
                        {
                            _AzAnbarId = Convert.ToInt32(cmbNameAnbar.EditValue);
                        }
                        int _Seryal_darSelectAnbar = 0;
                        int _Seryal_darColAnbarha = Convert.ToInt32(txtSeryal_darColAnbar.Text);
                        int _Seryal_darSelectNoe = Convert.ToInt32(txtSeryal_darSelectNoe.Text);
                        int? _GhateySanadNamber = null;
                        int _SabetAtefNumber = 0;
                        //int _RozaneSanadNumber = 0;
                        int _RozaneSanadNumber = Convert.ToInt32(txtRozaneSanadNumber.Text);
                        int? _PaygiriNumber = null;
                        if (txtPaygiriNumber.Text != "")
                            _PaygiriNumber = Convert.ToInt32(txtPaygiriNumber.Text);

                        DateTime _DateTimeSanad = Convert.ToDateTime(txtTarikh.Text);
                        DateTime _DateTimeInsert = DateTime.Now;
                        _HesabMoinId = Convert.ToInt32(cmbHesabMoin.EditValue);
                        _HesabTafsili1Id = Convert.ToInt32(cmbHesabTafsili1.EditValue) == 0 ? db.EpAllHesabTafsilis.FirstOrDefault(s => s.SalId == _SalId && s.LevelNamber == 1 && s.EpAllGroupTafsili1.Id == 19 && s.Name == "سایر 1").Id : Convert.ToInt32(cmbHesabTafsili1.EditValue);
                        _HesabTafsili2Id = Convert.ToInt32(cmbHesabTafsili2.EditValue) == 0 ? db.EpAllHesabTafsilis.FirstOrDefault(s => s.SalId == _SalId && s.LevelNamber == 2 && s.EpAllGroupTafsili1.Id == 38 && s.Name == "سایر 2").Id : Convert.ToInt32(cmbHesabTafsili2.EditValue);
                        _HesabTafsili3Id = Convert.ToInt32(cmbHesabTafsili3.EditValue) == 0 ? db.EpAllHesabTafsilis.FirstOrDefault(s => s.SalId == _SalId && s.LevelNamber == 3 && s.EpAllGroupTafsili1.Id == 57 && s.Name == "سایر 3").Id : Convert.ToInt32(cmbHesabTafsili3.EditValue);
                        _SharhSanad = txtSharhSanad.Text;
                        if (IsValidation())
                        {
                            var qq = db.EpNameKalas.Where(s => s.SalId == _SalId);

                            if (En1 == EnumCED.Create)
                            {
                                List<AkVorodeKala_Riz> List = new List<AkVorodeKala_Riz>();
                                for (int i = 0; i < gridView_AmaliatAddVaEdit.RowCount; i++)
                                {
                                    _AzAnbarId = Convert.ToInt32(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "AzAnbarId"));
                                    //int _Seryal_darSelectAnbar = 0;
                                    if (_FirstSelectAnbar_NextSanad)
                                    {
                                        _Seryal_darSelectAnbar = Convert.ToInt32(txtSeryal_darSelectAnbar.Text);
                                    }
                                    else
                                    {
                                        var qp = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.AzAnbarId == _AzAnbarId && s.NoeAmaliatCode == _NoeAmaliatCode).ToList();
                                        _Seryal_darSelectAnbar = qp.Count > 0 ? qp.Max(s => s.SeryalCol_darSelectAnbar) + 1 : 1;
                                    }

                                    long _Code = Convert.ToInt64(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "KalaCode_NM"));
                                    decimal _Meghdar = Convert.ToDecimal(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Meghdar"));
                                    decimal _Nerkh = Convert.ToDecimal(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Nerkh"));
                                    decimal _Mablag = Convert.ToDecimal(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Mablag"));
                                    string _Tozihat = gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Tozihat") != null ? gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Tozihat").ToString() : null;

                                    AkVorodeKala_Riz obj1 = new AkVorodeKala_Riz();
                                    obj1.SalId = _SalId;
                                    obj1.AzAnbarId = _AzAnbarId;
                                    obj1.BeAnbarId = _AzAnbarId;
                                    obj1.KalaId = qq.FirstOrDefault(s => s.Code == _Code).Id;
                                    obj1.VahedeKalaId = qq.FirstOrDefault(s => s.Code == _Code).VahedAsliId;
                                    obj1.SeryalCol_darColAnbarha = _Seryal_darColAnbarha;
                                    obj1.SeryalCol_darSelectAnbar = _Seryal_darSelectAnbar;
                                    obj1.SeryalJoze_darSelectAnbar = _Seryal_darSelectNoe;
                                    obj1.GhateySanadNamber = _GhateySanadNamber;
                                    obj1.SabetAtefNumber = _SabetAtefNumber;
                                    obj1.RozaneSanadNumber = _RozaneSanadNumber;
                                    obj1.PaygiriNumber = _PaygiriNumber;
                                    obj1.DateTimeSanad = _DateTimeSanad;
                                    obj1.DateTimeInsert = _DateTimeInsert;
                                    obj1.NoeAmaliatCode = _NoeAmaliatCode;
                                    obj1.NoeSanadCode = _NoeSanadCode;
                                    obj1.NoeSanadText = NoeSanadText;
                                    obj1.Meghdar = _Meghdar;
                                    obj1.Nerkh = _Nerkh;
                                    obj1.Mablag = _Mablag;
                                    obj1.IsRiali = _Mablag > 0 ? true : false;
                                    obj1.Radif = i + 1;
                                    obj1.Tozihat = _Tozihat;
                                    obj1.SharhSanad = _SharhSanad;
                                    //obj1.RozaneSanadNumber = _RozaneSanadNumber;
                                    //obj1.PaygiriNumber = _PaygiriNumber;
                                    obj1.HesabMoinId = _HesabMoinId;
                                    obj1.HesabTafsili1Id = _HesabTafsili1Id;
                                    obj1.HesabTafsili2Id = _HesabTafsili2Id;
                                    obj1.HesabTafsili3Id = _HesabTafsili3Id;

                                    List.Add(obj1);
                                }
                                db.AkVorodeKala_Rizs.AddRange(List);
                                db.SaveChanges();
                                //En1 = EnumCED.Save;
                                //if (IsClosed_AmaliatAddVEit)
                                //    btnCancel_Click(null, null);


                            }
                            else if (En1 == EnumCED.Edit)
                            {
                                //_SalId = Convert.ToInt32(lblSalId.Text);
                                //int _AzAnbarId = Convert.ToInt32(cmbNameAnbar.EditValue);
                                //int _Seryal = Convert.ToInt32(txtSeryal.Text);
                                ///////////*******************
                                //DateTime _DateTimeSanad = Convert.ToDateTime(txtTarikh.Text);
                                //DateTime _DateTimeInsert = DateTime.Now;
                                DateTime _DateTimeEdit = DateTime.Now;
                                List<AkVorodeKala_Riz> DBGridControl = (List<AkVorodeKala_Riz>)akVorodeKala_RizsBindingSource.DataSource;
                                BindingList<AkVorodeKala_Riz> list = new BindingList<AkVorodeKala_Riz>(DBGridControl);
                                List<AkVorodeKala_Riz> q2 = new List<AkVorodeKala_Riz>();
                                if (_FirstSelectAnbar_NextSanad)
                                {
                                    var qq2 = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.AzAnbarId == _AzAnbarId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode && s.SeryalCol_darColAnbarha == _Seryal_darColAnbarha && s.SeryalCol_darSelectAnbar == _Seryal_darSelectAnbar && s.SeryalJoze_darSelectAnbar == _Seryal_darSelectNoe).ToList();
                                    foreach (var item in qq2)
                                    {
                                        if (!list.Any(s => s.Id == item.Id))
                                        {
                                            db.AkVorodeKala_Rizs.Remove(qq2.FirstOrDefault(s => s.Id == item.Id));
                                            db.SaveChanges();
                                        }
                                    }
                                    q2 = qq2;
                                }
                                else
                                {
                                    var qq2 = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode && s.SeryalCol_darColAnbarha == _Seryal_darColAnbarha && s.SeryalJoze_darSelectAnbar == _Seryal_darSelectNoe).ToList();
                                    foreach (var item in qq2)
                                    {
                                        if (!list.Any(s => s.Id == item.Id))
                                        {
                                            db.AkVorodeKala_Rizs.Remove(qq2.FirstOrDefault(s => s.Id == item.Id));
                                            db.SaveChanges();
                                        }
                                    }
                                    q2 = qq2;
                                }

                                //var q1 = db.AkAllAmaliateRozanehs.Where(s => s.SalId == _SalId && s.AzAnbarId == _AzAnbarId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode && s.Seryal_darSelectNoe == _Seryal_darSelectNoe).ToList();
                                var q = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode && s.SeryalCol_darColAnbarha == _Seryal_darColAnbarha).ToList();
                                for (int i = 0; i < list.Count; i++)
                                {
                                    _AzAnbarId = Convert.ToInt32(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "AzAnbarId"));
                                    // int _Seryal_darSelectAnbar = 0;
                                    if (_FirstSelectAnbar_NextSanad)
                                    {
                                        _Seryal_darSelectAnbar = Convert.ToInt32(txtSeryal_darSelectAnbar.Text);
                                    }
                                    else
                                    {
                                        var qp = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.AzAnbarId == _AzAnbarId && s.NoeAmaliatCode == _NoeAmaliatCode).ToList();
                                        var qp1 = qp.FirstOrDefault(s => s.SeryalCol_darColAnbarha == _Seryal_darColAnbarha);
                                        _Seryal_darSelectAnbar = qp1 != null ? qp1.SeryalCol_darSelectAnbar : qp.Count > 0 ? qp.Max(s => s.SeryalCol_darSelectAnbar) + 1 : 1;
                                    }

                                    long _Code = Convert.ToInt64(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "KalaCode_NM"));
                                    decimal _Meghdar = Convert.ToDecimal(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Meghdar"));
                                    decimal _Nerkh = Convert.ToDecimal(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Nerkh"));
                                    decimal _Mablag = Convert.ToDecimal(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Mablag"));
                                    string _Tozihat = gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Tozihat") != null ? gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Tozihat").ToString() : null;

                                    if (list[i].Id > 0)
                                    {
                                        var v1 = q.FirstOrDefault(s => s.Id == list[i].Id);

                                        v1.SalId = _SalId;
                                        v1.AzAnbarId = _AzAnbarId;
                                        v1.BeAnbarId = _AzAnbarId;
                                        v1.SeryalCol_darSelectAnbar = _Seryal_darSelectAnbar;
                                        v1.RozaneSanadNumber = _RozaneSanadNumber;
                                        v1.PaygiriNumber = _PaygiriNumber;
                                        v1.KalaId = qq.FirstOrDefault(s => s.Code == _Code).Id;
                                        v1.VahedeKalaId = qq.FirstOrDefault(s => s.Code == _Code).VahedAsliId;
                                        //v1.Seryal_darSelectNoe = _Seryal;
                                        v1.DateTimeSanad = _DateTimeSanad;
                                        v1.DateTimeEdit = _DateTimeEdit;
                                        v1.NoeAmaliatCode = _NoeAmaliatCode;
                                        v1.NoeSanadCode = _NoeSanadCode;
                                        v1.NoeSanadText = NoeSanadText;
                                        v1.Meghdar = _Meghdar;
                                        v1.Nerkh = _Nerkh;
                                        v1.Mablag = _Mablag;
                                        v1.IsRiali = _Mablag > 0 ? true : false;
                                        //v1.Radif = i + 1;
                                        v1.Tozihat = _Tozihat;
                                        v1.SharhSanad = _SharhSanad;
                                        v1.HesabMoinId = _HesabMoinId;
                                        v1.HesabTafsili1Id = _HesabTafsili1Id;
                                        v1.HesabTafsili2Id = _HesabTafsili2Id;
                                        v1.HesabTafsili3Id = _HesabTafsili3Id;

                                        db.SaveChanges();
                                    }
                                    else
                                    {

                                        AkVorodeKala_Riz obj1 = new AkVorodeKala_Riz();
                                        obj1.SalId = _SalId;
                                        obj1.AzAnbarId = _AzAnbarId;
                                        obj1.BeAnbarId = _AzAnbarId;
                                        obj1.SeryalCol_darColAnbarha = _Seryal_darColAnbarha;
                                        obj1.SeryalCol_darSelectAnbar = _Seryal_darSelectAnbar;
                                        obj1.SeryalJoze_darSelectAnbar = _Seryal_darSelectNoe;
                                        obj1.GhateySanadNamber = _GhateySanadNamber;
                                        obj1.SabetAtefNumber = _SabetAtefNumber;
                                        obj1.RozaneSanadNumber = _RozaneSanadNumber;
                                        obj1.PaygiriNumber = _PaygiriNumber;
                                        obj1.KalaId = qq.FirstOrDefault(s => s.Code == _Code).Id;
                                        obj1.VahedeKalaId = qq.FirstOrDefault(s => s.Code == _Code).VahedAsliId;
                                        //obj1.Seryal_darSelectNoe = _Seryal;
                                        obj1.DateTimeSanad = _DateTimeSanad;
                                        obj1.DateTimeInsert = _DateTimeInsert;
                                        obj1.NoeAmaliatCode = _NoeAmaliatCode;
                                        obj1.NoeSanadCode = _NoeSanadCode;
                                        obj1.NoeSanadText = NoeSanadText;
                                        obj1.Meghdar = _Meghdar;
                                        obj1.Nerkh = _Nerkh;
                                        obj1.Mablag = _Mablag;
                                        obj1.IsRiali = _Mablag > 0 ? true : false;
                                        obj1.Radif = 0;
                                        obj1.Tozihat = _Tozihat;
                                        obj1.SharhSanad = _SharhSanad;
                                        //obj1.RozaneSanadNumber = 1;
                                        obj1.HesabMoinId = _HesabMoinId;
                                        obj1.HesabTafsili1Id = _HesabTafsili1Id;
                                        obj1.HesabTafsili2Id = _HesabTafsili2Id;
                                        obj1.HesabTafsili3Id = _HesabTafsili3Id;

                                        db.AkVorodeKala_Rizs.Add(obj1);
                                        db.SaveChanges();
                                    }
                                }
                                var qq1 = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode && s.NoeSanadCode == _NoeSanadCode && s.SeryalCol_darColAnbarha == _Seryal_darColAnbarha).ToList();
                                if (qq1.Count > 0)
                                {
                                    for (int j = 0; j < qq1.Count; j++)
                                    {
                                        qq1[j].Radif = qq1[j].Radif = j + 1;
                                    }
                                    db.SaveChanges();
                                }
                            }


                            En1 = EnumCED.Save;

                            if (IsClosed_AmaliatAddVEit)
                            {
                                btnCancel_Click(null, null);
                            }

                            if (IsClosed_AmaliatAddVEit == false)
                                ActiveButtons();

                            ///////////*******************
                            //var q = db.AkAllAmaliateRozanehs.Where(s => s.SalId == _SalId && s.AnbarId == _AzAnbarId && s.NoeAmaliatIndex == 2 && s.AmaliatIndex == 201 && s.Seryal == _Seryal).ToList();
                            //if (q.Count > 0)
                            //{
                            //    db.AkAllAmaliateRozanehs.RemoveRange(q);

                            //    List<AkAllAmaliateRozaneh> List = new List<AkAllAmaliateRozaneh>();
                            //    DateTime _DateTimeSanad = Convert.ToDateTime(txtTarikh.Text);
                            //    DateTime _DateTimeInsert = DateTime.Now;
                            //    for (int i = 0; i < gridView_AmaliatAddVaEdit.RowCount; i++)
                            //    {
                            //        int _Code = Convert.ToInt32(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "KalaCode"));
                            //        decimal _Meghdar = Convert.ToInt32(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Meghdar"));
                            //        decimal _Nerkh = Convert.ToInt32(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Nerkh"));
                            //        decimal _Mablag = Convert.ToInt32(gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Mablag"));
                            //        string _Tozihat = gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Tozihat") != null ? gridView_AmaliatAddVaEdit.GetRowCellValue(i, "Tozihat").ToString() : null;

                            //        AkVorodeKala_Riz obj1 = new AkVorodeKala_Riz();
                            //        obj1.SalId = _SalId;
                            //        obj1.AnbarId = _AzAnbarId;
                            //        obj1.KalaId = db.EpNameKalas.FirstOrDefault(s => s.SalId == _SalId && s.Code == _Code).Id;
                            //        obj1.VahedeKalaId = db.EpNameKalas.FirstOrDefault(s => s.SalId == _SalId && s.Code == _Code).VahedAsliId;
                            //        obj1.Seryal = _Seryal;
                            //        obj1.DateTimeSanad = _DateTimeSanad;
                            //        obj1.DateTimeInsert = _DateTimeInsert;
                            //        obj1.NoeAmaliatIndex = 2;
                            //        obj1.AmaliatIndex = 201;
                            //        obj1.Meghdar = _Meghdar;
                            //        obj1.Nerkh = _Nerkh;
                            //        obj1.Mablag = _Mablag;
                            //        obj1.IsRiali = _Mablag > 0 ? true : false;
                            //        obj1.Radif = i + 1;
                            //        obj1.Tozihat = _Tozihat;
                            //        obj1.SanadNamber = 1;
                            //        obj1.HesabMoinId = Convert.ToInt32(cmbHesabMoin.EditValue);
                            //        obj1.HesabTafsiliId = Convert.ToInt32(cmbHesabTafsili.EditValue);


                            //        AkAllAmaliateRozaneh obj = new AkAllAmaliateRozaneh();
                            //        obj.SalId = _SalId;
                            //        obj.AnbarId = _AzAnbarId;
                            //        obj.KalaId = db.EpNameKalas.FirstOrDefault(s => s.SalId == _SalId && s.Code == _Code).Id;
                            //        obj.VahedeKalaId = db.EpNameKalas.FirstOrDefault(s => s.SalId == _SalId && s.Code == _Code).VahedAsliId;
                            //        obj.Seryal = _Seryal;
                            //        obj.NoeAmaliatIndex = 2;
                            //        obj.AmaliatIndex = 201;
                            //        obj.Meghdar = _Meghdar;
                            //        obj.Nerkh = _Nerkh;
                            //        obj.Mablag = _Mablag;
                            //        obj.IsRiali = _Mablag > 0 ? true : false;
                            //        obj.Radif = i + 1;
                            //        obj.SanadNamber = 1;
                            //        obj.AkVorodeKala_Riz1 = obj1;
                            //        obj.HesabMoinId = Convert.ToInt32(cmbHesabMoin.EditValue);
                            //        obj.HesabTafsiliId = Convert.ToInt32(cmbHesabTafsili.EditValue);

                            //        List.Add(obj);
                            //    }
                            //    db.AkAllAmaliateRozanehs.AddRange(List);
                            //    db.SaveChanges();
                            //    En1 = EnumCED.Save;
                            //    if (IsClosed_AmaliatAddVEit)
                            //        btnCancel_Click(null, null);
                            //}
                        }
                    }
                    catch (Exception ex)
                    {
                        XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                            "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }

            }
        }

        private void gridView_AmaliatAddVaEdit_RowCountChanged(object sender, EventArgs e)
        {
            if (gridView_AmaliatAddVaEdit.RowCount > 0)
            {
                btnDelete1.Enabled = btnEdit1.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled =
        btnFirst.Enabled = btnSaveAndClosed.Enabled = btnSaveAndNext.Enabled = btnSaveAndPrintAndClosed.Enabled = true;
            }
            else
            {
                btnDelete1.Enabled = btnEdit1.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled =
        btnFirst.Enabled = btnSaveAndClosed.Enabled = btnSaveAndNext.Enabled = btnSaveAndPrintAndClosed.Enabled = false;
            }
        }

        private void cmbNameAnbar_EditValueChanged(object sender, EventArgs e)
        {
            if (xtcAmaliatRozaneh.Enabled == false)
            {
                xtcAmaliatRozaneh.Enabled = true;
                xtcAmaliatRozaneh_SelectedPageChanged(null, null);
            }
            else if (xtcAmaliatRozaneh.SelectedTabPage.Name == "xtpMojodiAvalDore")
                xtcAmaliatRozaneh_SelectedPageChanged(null, null);

            btnDisplyList.Enabled = true;
            btnDisplyList_Click(null, null);
        }

        private void btnSaveAndNext_Click(object sender, EventArgs e)
        {
            if (btnSaveAndNext.Enabled)
            {
                IsClosed_AmaliatAddVEit = false;
                btnSaveAndClosed_Click(null, null);

                if (En1 == EnumCED.Save)
                {
                    using (var db = new MyContext())
                    {
                        try
                        {
                            if (txtNoeAmaliat1.Text == "xtpMojodiAvalDore")
                            {
                                var qp = db.AkVorodeKala_Rizs.Where(s => s.SalId == _SalId && s.NoeAmaliatCode == _NoeAmaliatCode).ToList();
                                txtSeryal_darColAnbar.Text = qp.Count > 0 ? (qp.Max(s => s.SeryalCol_darColAnbarha) + 1).ToString() : "1";
                                if (_FirstSelectAnbar_NextSanad)
                                {
                                    _AzAnbarId = Convert.ToInt32(cmbNameAnbar.EditValue);

                                    var q = qp.Where(s => s.AzAnbarId == _AzAnbarId).ToList();
                                    txtSeryal_darSelectAnbar.Text = q.Count > 0 ? (q.Max(s => s.SeryalCol_darSelectAnbar) + 1).ToString() : "1";

                                    var qq = q.Where(s => s.NoeSanadCode == _NoeSanadCode).ToList();
                                    txtSeryal_darSelectNoe.Text = qq.Count > 0 ? (qq.Max(s => s.SeryalJoze_darSelectAnbar) + 1).ToString() : "1";
                                }
                                else
                                {
                                    var q = qp.Where(s => s.NoeSanadCode == _NoeSanadCode).ToList();
                                    txtSeryal_darSelectNoe.Text = q.Count > 0 ? (q.Max(s => s.SeryalJoze_darSelectAnbar) + 1).ToString() : "1";
                                    txtSeryal_darSelectAnbar.Text = "0";
                                    txtSeryal_darSelectAnbar.Visible = lblSeryal_darSelectAnbar.Visible = false;
                                }

                                txtTarikh.Text = DateTime.Now.ToString();
                                //chkIsSanadHesabdari.Checked = true;
                            }

                            // ActiveButtons();
                            // btnCancel.Enabled = true;
                            txtSharhSanad.Text = string.Empty;
                            akVorodeKala_RizsBindingSource.Clear();
                            IsClosed_AmaliatAddVEit = true;
                            En1 = EnumCED.Create;
                            XtraMessageBox.Show("اطلاعات جدید ذخیره شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information);

                        }
                        catch (Exception ex)
                        {
                            XtraMessageBox.Show("عملیات با خطا مواجه شد" + "\n" + ex.Message,
                                "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                }

            }
        }

        private void btnSaveAndPrintAndClosed_Click_1(object sender, EventArgs e)
        {
            if (btnSaveAndPrintAndClosed.Enabled)
            {
                btnSaveAndClosed_Click(null, null);

            }
        }

        private void FrmMojodiAvalDoreKala_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F2)
            {
                btnCreate_Click(sender, null);
            }
            else if (e.KeyCode == Keys.F3)
            {
                btnDelete_Click(sender, null);
            }
            else if (e.KeyCode == Keys.F4)
            {
                btnEdit_Click(sender, null);
            }
            else if (e.KeyCode == Keys.F5)
            {
                btnSaveAndClosed_Click(sender, null);
            }
            else if (e.KeyCode == Keys.F6)
            {
                btnSaveAndNext_Click(sender, null);
            }
            else if (e.KeyCode == Keys.F9)
            {
                btnSaveAndPrintAndClosed_Click_1(sender, null);
            }
            //else if (e.KeyCode == Keys.F7)
            //{
            //    btnCancel_Click(sender, null);
            //}
            //else if (e.KeyCode == Keys.F8)
            //{
            //    btnDisplyList_Click(sender, null);
            //}
            else if (e.KeyCode == Keys.F10)
            {
                btnPrintPreview_Click(sender, null);
            }
            else if (e.KeyCode == Keys.F12)
            {
                btnClose_Click(sender, null);
            }

        }

        private void btnDisplyList_Click(object sender, EventArgs e)
        {
            FillGridControl();
        }

        private void btnPrintPreview_Click(object sender, EventArgs e)
        {

        }

        private void gridView_RowCellClick(object sender, RowCellClickEventArgs e)
        {
            try
            {
                if (xtcAmaliatRozaneh.SelectedTabPageIndex == 1)
                {
                    btnDelete1.Enabled = btnEdit1.Enabled = true;
                }
                else
                    btnDelete.Enabled = btnEdit.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled = btnPrintPreview.Enabled = true;

            }
            catch (Exception)
            {
            }

        }

        private void gridView_KeyDown(object sender, KeyEventArgs e)
        {
            gridView_RowCellClick(null, null);
        }

        private void gridView_KeyUp(object sender, KeyEventArgs e)
        {
            gridView_RowCellClick(null, null);
        }

        private void FrmMojodiAvalDoreKala_FormClosed(object sender, FormClosedEventArgs e)
        {
            if (dbContext != null)
                dbContext.Dispose();

        }

        private void btnLast_Click(object sender, EventArgs e)
        {
            if (xtcAmaliatRozaneh.SelectedTabPage.Name == "xtpAmaliatAddVEdit")
            {
                HelpClass1.MoveLast(gridView_AmaliatAddVaEdit);
            }
            else
            {
                HelpClass1.MoveLast(gridView);
            }

        }

        private void btnNext_Click(object sender, EventArgs e)
        {
            if (xtcAmaliatRozaneh.SelectedTabPage.Name == "xtpAmaliatAddVEdit")
            {
                HelpClass1.MoveNext(gridView_AmaliatAddVaEdit);
            }
            else
            {
                HelpClass1.MoveNext(gridView);
            }

        }

        private void btnPreview_Click(object sender, EventArgs e)
        {
            if (xtcAmaliatRozaneh.SelectedTabPage.Name == "xtpAmaliatAddVEdit")
            {
                HelpClass1.MovePrev(gridView_AmaliatAddVaEdit);
            }
            else
            {
                HelpClass1.MovePrev(gridView);
            }

        }

        private void btnFirst_Click(object sender, EventArgs e)
        {
            if (xtcAmaliatRozaneh.SelectedTabPage.Name == "xtpAmaliatAddVEdit")
            {
                HelpClass1.MoveFirst(gridView_AmaliatAddVaEdit);
            }
            else
            {
                HelpClass1.MoveFirst(gridView);
            }

        }

        private void gridView_RowClick(object sender, RowClickEventArgs e)
        {
            btnDelete.Enabled = btnEdit.Enabled = btnLast.Enabled = btnNext.Enabled = btnPreview.Enabled = btnFirst.Enabled = btnPrintPreview.Enabled = false;

        }

        private void cmbHesabTafsili2_Enter(object sender, EventArgs e)
        {
            if (En1 == EnumCED.Create || En1 == EnumCED.Save)
            {
                cmbHesabTafsili2.ShowPopup();
            }

        }

        private void cmbHesabTafsili3_Enter(object sender, EventArgs e)
        {
            if (En1 == EnumCED.Create || En1 == EnumCED.Save)
            {
                cmbHesabTafsili3.ShowPopup();
            }

        }

        bool _IsActiveRow = true;
        private void cmbControl_CustomDrawCell(object sender, DevExpress.XtraEditors.Popup.LookUpCustomDrawCellArgs e)
        {
            if (!_IsActiveRow)
                e.Appearance.ForeColor = Color.Red;

            if (e.Header.Caption == "فعال" && e.DisplayText == "True")
                e.DisplayText = "بله";
            if (e.Header.Caption == "فعال" && e.DisplayText == "False")
                e.DisplayText = "خیر";
            if (e.Header.Caption == "اجازه موجودی منفی" && e.DisplayText == "True")
                e.DisplayText = "بله";
            if (e.Header.Caption == "اجازه موجودی منفی" && e.DisplayText == "False")
                e.DisplayText = "خیر";
        }

        private void cmbControl_CustomDrawRow(object sender, DevExpress.XtraEditors.Popup.LookUpCustomDrawRowArgs e)
        {
            _IsActiveRow = Convert.ToBoolean(e.GetCellValue(0));
        }
    }
}